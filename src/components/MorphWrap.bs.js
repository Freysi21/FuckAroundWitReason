// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Elli$MyProjectName = require("./Elli.bs.js");
var Freysi$MyProjectName = require("./Freysi.bs.js");
var MorphReplace$MyProjectName = require("../bindings/MorphReplace.bs.js");

var component = ReasonReact.reducerComponent("MorphWrap");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              console.log("Renderd");
              console.log(self[/* state */1][/* checked */0]);
              var match = self[/* state */1][/* checked */0];
              return React.createElement("div", undefined, React.createElement("div", {
                              id: "Faget",
                              onClick: (function () {
                                  Curry._1(self[/* send */3], /* Click */[self[/* state */1][/* checked */0]]);
                                  console.log("Clickde");
                                  console.log(self[/* state */1][/* checked */0]);
                                  return /* () */0;
                                })
                            }, ReasonReact.element(/* None */0, /* None */0, MorphReplace$MyProjectName.MorphReplace[/* make */0](100, 100, /* array */[match ? ReasonReact.element(/* None */0, /* None */0, Freysi$MyProjectName.make(/* array */[])) : ReasonReact.element(/* None */0, /* None */0, Elli$MyProjectName.make(/* array */[]))]))));
            }),
          /* initialState */(function () {
              return /* record */[/* checked */false];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [/* record */[/* checked */!action[0]]]);
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
